// <auto-generated />
using System;
using GymManagement.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GymManagement.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("GymManagement.Models.BaoCao", b =>
                {
                    b.Property<int>("ID_BaoCao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID_BaoCao"));

                    b.Property<string>("ID_User")
                        .HasColumnType("nvarchar(128)");

                    b.Property<DateTime>("ngayBaoCao")
                        .HasColumnType("datetime2");

                    b.Property<string>("noiDung")
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)");

                    b.Property<string>("tenBaoCao")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("ID_BaoCao");

                    b.HasIndex("ID_User");

                    b.ToTable("BaoCao");
                });

            modelBuilder.Entity("GymManagement.Models.CaLamViec", b =>
                {
                    b.Property<int>("ID_Ca")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID_Ca"));

                    b.Property<string>("UserID_User")
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("moTa")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("tenCa")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("ID_Ca");

                    b.HasIndex("UserID_User");

                    b.ToTable("CaLamViec");
                });

            modelBuilder.Entity("GymManagement.Models.GoiTap", b =>
                {
                    b.Property<int>("ID_GoiTap")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID_GoiTap"));

                    b.Property<string>("ID_User")
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("moTa")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime>("ngayBatDau")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ngayKetThuc")
                        .HasColumnType("datetime2");

                    b.Property<int?>("soBuoi")
                        .HasColumnType("int");

                    b.Property<int>("soTien")
                        .HasColumnType("int");

                    b.Property<string>("tenGoi")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("ID_GoiTap");

                    b.HasIndex("ID_User");

                    b.ToTable("GoiTap");
                });

            modelBuilder.Entity("GymManagement.Models.HoaDon_ThanhLy", b =>
                {
                    b.Property<int>("ID_ThanhLi")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID_ThanhLi"));

                    b.Property<int>("ID_ThietBi")
                        .HasColumnType("int");

                    b.Property<string>("ID_User")
                        .HasColumnType("nvarchar(128)");

                    b.Property<DateTime>("ngayThanhLy")
                        .HasColumnType("datetime2");

                    b.Property<int>("soTien")
                        .HasColumnType("int");

                    b.HasKey("ID_ThanhLi");

                    b.HasIndex("ID_ThietBi");

                    b.HasIndex("ID_User");

                    b.ToTable("HoaDon_ThanhLy");
                });

            modelBuilder.Entity("GymManagement.Models.HoaDon_ThanhToan", b =>
                {
                    b.Property<int>("ID_HieuDon")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID_HieuDon"));

                    b.Property<int>("ID_GoiTap")
                        .HasColumnType("int");

                    b.Property<string>("ID_User")
                        .HasColumnType("nvarchar(128)");

                    b.Property<DateTime>("ngayThu")
                        .HasColumnType("datetime2");

                    b.Property<int>("soTien")
                        .HasColumnType("int");

                    b.HasKey("ID_HieuDon");

                    b.HasIndex("ID_GoiTap");

                    b.HasIndex("ID_User");

                    b.ToTable("HoaDon_ThanhToan");
                });

            modelBuilder.Entity("GymManagement.Models.HoiVien", b =>
                {
                    b.Property<int>("ID_HoiVien")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID_HoiVien"));

                    b.Property<string>("ID_User")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserID_User")
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("diaChi")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("email")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("gioiTinh")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime>("ngayGiaNhap")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ngaySinh")
                        .HasColumnType("datetime2");

                    b.Property<string>("sdt")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("tenHoiVien")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("ID_HoiVien");

                    b.HasIndex("UserID_User");

                    b.ToTable("HoiViens");
                });

            modelBuilder.Entity("GymManagement.Models.LichTap", b =>
                {
                    b.Property<int>("ID_LichTap")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID_LichTap"));

                    b.Property<int>("ID_PhongTap")
                        .HasColumnType("int");

                    b.Property<int>("ID_TheHoiVien")
                        .HasColumnType("int");

                    b.Property<string>("ID_User")
                        .HasColumnType("nvarchar(128)");

                    b.Property<TimeSpan>("gioBatDau")
                        .HasColumnType("time");

                    b.Property<TimeSpan>("gioKetThuc")
                        .HasColumnType("time");

                    b.Property<DateTime>("ngayTap")
                        .HasColumnType("datetime2");

                    b.Property<string>("noiDung")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.HasKey("ID_LichTap");

                    b.HasIndex("ID_PhongTap");

                    b.HasIndex("ID_TheHoiVien");

                    b.HasIndex("ID_User");

                    b.ToTable("LichTap");
                });

            modelBuilder.Entity("GymManagement.Models.PhanCong", b =>
                {
                    b.Property<int>("ID_PhanCong")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID_PhanCong"));

                    b.Property<int>("ID_CaLam")
                        .HasColumnType("int");

                    b.Property<int>("ID_PhongTap")
                        .HasColumnType("int");

                    b.Property<string>("ID_User")
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("createdByAdminID")
                        .HasColumnType("nvarchar(128)");

                    b.Property<DateTime>("ngayPhanCong")
                        .HasColumnType("datetime2");

                    b.HasKey("ID_PhanCong");

                    b.HasIndex("ID_CaLam");

                    b.HasIndex("ID_PhongTap");

                    b.HasIndex("ID_User");

                    b.HasIndex("createdByAdminID");

                    b.ToTable("PhanCong");
                });

            modelBuilder.Entity("GymManagement.Models.PhongTap", b =>
                {
                    b.Property<int>("ID_PhongTap")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID_PhongTap"));

                    b.Property<int?>("ID_ThietBi")
                        .HasColumnType("int");

                    b.Property<string>("diaChiPhong")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("sucChua")
                        .HasColumnType("int");

                    b.Property<int?>("sucChuaThietBi")
                        .HasColumnType("int");

                    b.Property<string>("tenPhongTap")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("ID_PhongTap");

                    b.HasIndex("ID_ThietBi");

                    b.ToTable("PhongTap");
                });

            modelBuilder.Entity("GymManagement.Models.QuanLy_NhanVien", b =>
                {
                    b.Property<int>("ID_QuanLyNhanVien")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID_QuanLyNhanVien"));

                    b.Property<string>("ID_Admin")
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ID_User")
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("ID_QuanLyNhanVien");

                    b.HasIndex("ID_Admin");

                    b.HasIndex("ID_User");

                    b.ToTable("QuanLy_NhanVien");
                });

            modelBuilder.Entity("GymManagement.Models.Role", b =>
                {
                    b.Property<int>("ID_Role")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID_Role"));

                    b.Property<string>("mota")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("ID_Role");

                    b.ToTable("Role");
                });

            modelBuilder.Entity("GymManagement.Models.TheHoiVien", b =>
                {
                    b.Property<int>("ID_TheHoiVien")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID_TheHoiVien"));

                    b.Property<int>("ID_GoiTap")
                        .HasColumnType("int");

                    b.Property<int>("ID_HoiVien")
                        .HasColumnType("int");

                    b.Property<string>("ID_User")
                        .HasColumnType("nvarchar(128)");

                    b.Property<DateTime>("ngayDangKy")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ngayHetHan")
                        .HasColumnType("datetime2");

                    b.Property<string>("tinhTrangThe")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ID_TheHoiVien");

                    b.HasIndex("ID_GoiTap");

                    b.HasIndex("ID_HoiVien");

                    b.HasIndex("ID_User");

                    b.ToTable("TheHoiVien");
                });

            modelBuilder.Entity("GymManagement.Models.ThietBi", b =>
                {
                    b.Property<int>("ID_ThietBi")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID_ThietBi"));

                    b.Property<string>("ID_User")
                        .HasColumnType("nvarchar(128)");

                    b.Property<int?>("soLuong")
                        .HasColumnType("int");

                    b.Property<string>("tenThietBi")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("tinhTrang")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("ID_ThietBi");

                    b.HasIndex("ID_User");

                    b.ToTable("ThietBi");
                });

            modelBuilder.Entity("GymManagement.Models.User", b =>
                {
                    b.Property<string>("ID_User")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<int>("ID_Role")
                        .HasColumnType("int");

                    b.Property<string>("TenDangNhap")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("ID_User");

                    b.HasIndex("ID_Role");

                    b.ToTable("User");
                });

            modelBuilder.Entity("GymManagement.Models.BaoCao", b =>
                {
                    b.HasOne("GymManagement.Models.User", "User")
                        .WithMany("BaoCaos")
                        .HasForeignKey("ID_User");

                    b.Navigation("User");
                });

            modelBuilder.Entity("GymManagement.Models.CaLamViec", b =>
                {
                    b.HasOne("GymManagement.Models.User", null)
                        .WithMany("CaiLamViecs")
                        .HasForeignKey("UserID_User");
                });

            modelBuilder.Entity("GymManagement.Models.GoiTap", b =>
                {
                    b.HasOne("GymManagement.Models.User", "User")
                        .WithMany("GoTaps")
                        .HasForeignKey("ID_User");

                    b.Navigation("User");
                });

            modelBuilder.Entity("GymManagement.Models.HoaDon_ThanhLy", b =>
                {
                    b.HasOne("GymManagement.Models.ThietBi", "ThietBi")
                        .WithMany("HoaDon_ThanhLies")
                        .HasForeignKey("ID_ThietBi")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GymManagement.Models.User", "User")
                        .WithMany("HoaDon_ThanhLies")
                        .HasForeignKey("ID_User");

                    b.Navigation("ThietBi");

                    b.Navigation("User");
                });

            modelBuilder.Entity("GymManagement.Models.HoaDon_ThanhToan", b =>
                {
                    b.HasOne("GymManagement.Models.GoiTap", "GoiTap")
                        .WithMany("HoaDon_ThanhToans")
                        .HasForeignKey("ID_GoiTap")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GymManagement.Models.User", "User")
                        .WithMany("HoaDon_ThanhToans")
                        .HasForeignKey("ID_User");

                    b.Navigation("GoiTap");

                    b.Navigation("User");
                });

            modelBuilder.Entity("GymManagement.Models.HoiVien", b =>
                {
                    b.HasOne("GymManagement.Models.User", null)
                        .WithMany("HoiViensCreated")
                        .HasForeignKey("UserID_User");
                });

            modelBuilder.Entity("GymManagement.Models.LichTap", b =>
                {
                    b.HasOne("GymManagement.Models.PhongTap", "PhongTap")
                        .WithMany()
                        .HasForeignKey("ID_PhongTap")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GymManagement.Models.TheHoiVien", "TheHoiVien")
                        .WithMany()
                        .HasForeignKey("ID_TheHoiVien")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GymManagement.Models.User", "User")
                        .WithMany("LichTaps")
                        .HasForeignKey("ID_User");

                    b.Navigation("PhongTap");

                    b.Navigation("TheHoiVien");

                    b.Navigation("User");
                });

            modelBuilder.Entity("GymManagement.Models.PhanCong", b =>
                {
                    b.HasOne("GymManagement.Models.CaLamViec", "CaiLamViec")
                        .WithMany("PhanCongs")
                        .HasForeignKey("ID_CaLam")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GymManagement.Models.PhongTap", "PhongTap")
                        .WithMany("PhanCongs")
                        .HasForeignKey("ID_PhongTap")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GymManagement.Models.User", "User")
                        .WithMany("PhanCongsAssigned")
                        .HasForeignKey("ID_User")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("GymManagement.Models.User", "AdminCreator")
                        .WithMany("PhanCongsCreated")
                        .HasForeignKey("createdByAdminID")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("AdminCreator");

                    b.Navigation("CaiLamViec");

                    b.Navigation("PhongTap");

                    b.Navigation("User");
                });

            modelBuilder.Entity("GymManagement.Models.PhongTap", b =>
                {
                    b.HasOne("GymManagement.Models.ThietBi", "ThietBi")
                        .WithMany("PhongTaps")
                        .HasForeignKey("ID_ThietBi");

                    b.Navigation("ThietBi");
                });

            modelBuilder.Entity("GymManagement.Models.QuanLy_NhanVien", b =>
                {
                    b.HasOne("GymManagement.Models.User", "AdminUser")
                        .WithMany("QuanLy_NhanViensCreated")
                        .HasForeignKey("ID_Admin")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("GymManagement.Models.User", "ManagedUser")
                        .WithMany("QuanLy_NhanViensManaged")
                        .HasForeignKey("ID_User")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("AdminUser");

                    b.Navigation("ManagedUser");
                });

            modelBuilder.Entity("GymManagement.Models.TheHoiVien", b =>
                {
                    b.HasOne("GymManagement.Models.GoiTap", "GoiTap")
                        .WithMany("TheHoiViens")
                        .HasForeignKey("ID_GoiTap")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GymManagement.Models.HoiVien", "HoiVien")
                        .WithMany()
                        .HasForeignKey("ID_HoiVien")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GymManagement.Models.User", "User")
                        .WithMany("TheHoiViens")
                        .HasForeignKey("ID_User");

                    b.Navigation("GoiTap");

                    b.Navigation("HoiVien");

                    b.Navigation("User");
                });

            modelBuilder.Entity("GymManagement.Models.ThietBi", b =>
                {
                    b.HasOne("GymManagement.Models.User", "User")
                        .WithMany("ThietBis")
                        .HasForeignKey("ID_User");

                    b.Navigation("User");
                });

            modelBuilder.Entity("GymManagement.Models.User", b =>
                {
                    b.HasOne("GymManagement.Models.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("ID_Role")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("GymManagement.Models.CaLamViec", b =>
                {
                    b.Navigation("PhanCongs");
                });

            modelBuilder.Entity("GymManagement.Models.GoiTap", b =>
                {
                    b.Navigation("HoaDon_ThanhToans");

                    b.Navigation("TheHoiViens");
                });

            modelBuilder.Entity("GymManagement.Models.PhongTap", b =>
                {
                    b.Navigation("PhanCongs");
                });

            modelBuilder.Entity("GymManagement.Models.Role", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("GymManagement.Models.ThietBi", b =>
                {
                    b.Navigation("HoaDon_ThanhLies");

                    b.Navigation("PhongTaps");
                });

            modelBuilder.Entity("GymManagement.Models.User", b =>
                {
                    b.Navigation("BaoCaos");

                    b.Navigation("CaiLamViecs");

                    b.Navigation("GoTaps");

                    b.Navigation("HoaDon_ThanhLies");

                    b.Navigation("HoaDon_ThanhToans");

                    b.Navigation("HoiViensCreated");

                    b.Navigation("LichTaps");

                    b.Navigation("PhanCongsAssigned");

                    b.Navigation("PhanCongsCreated");

                    b.Navigation("QuanLy_NhanViensCreated");

                    b.Navigation("QuanLy_NhanViensManaged");

                    b.Navigation("TheHoiViens");

                    b.Navigation("ThietBis");
                });
#pragma warning restore 612, 618
        }
    }
}
